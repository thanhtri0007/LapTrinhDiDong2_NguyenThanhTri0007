import { ScrollView, Text, View, Pressable, TextInput, ImageBackground } from "react-native";
import React, { useState, useEffect } from "react";
import { AntDesign, Ionicons } from "@expo/vector-icons";
import { useNavigation } from "@react-navigation/native";
import { useDispatch } from "react-redux";
import { addToCart } from "../cart/CartReducer";
import axios from "axios";

const ProductDetails = ({ route }) => {
  const { productId, carouselImages, oldPrice, price } = route.params;
  const navigation = useNavigation();
  const [addedToCart, setAddedToCart] = useState(false);
  const [isFavorited, setIsFavorited] = useState(false);
  const dispatch = useDispatch();
  const [productDetail, setProductDetail] = useState(null);
  const [selectedOption, setSelectedOption] = useState({ color: '', size: '' });
  const [paymentMethod, setPaymentMethod] = useState('cod');
  const [shippingMethod, setShippingMethod] = useState('standard');

  const reviews = [
    { id: 1, name: "Nguy·ªÖn Kim Ho√†ng Anh", rating: 4, comment: "S·∫£n ph·∫©m r·∫•t t·ªët, t√¥i r·∫•t h√†i l√≤ng v·ªõi ch·∫•t l∆∞·ª£ng!" },
    { id: 2, name: "ƒê·ªó Qu·ªëc Huy", rating: 5, comment: "D·ªãch v·ª• tuy·ªát v·ªùi v√† s·∫£n ph·∫©m ch·∫•t l∆∞·ª£ng!" },
    { id: 3, name: "Nguy·ªÖn Th√†nh Tr√≠", rating: 3, comment: "S·∫£n ph·∫©m t·∫°m ·ªïn, nh∆∞ng c√≥ th·ªÉ c·∫£i thi·ªán." },
  ];

  const addItemToCart = () => {
    if (route.params && route.params.id && !addedToCart) {
      setAddedToCart(true);
      dispatch(addToCart({ ...route.params, selectedOption, paymentMethod, shippingMethod }));
      setTimeout(() => {
        setAddedToCart(false);
      }, 60000);
    }
  };

  const toggleFavorite = () => {
    setIsFavorited(prev => !prev);
  };

  const fetchProductDetail = async (productId) => {
    try {
      const response = await axios.get(`https://fakestoreapi.com/products/${productId}`);
      const productDetail = response.data;
      setProductDetail(productDetail);
    } catch (error) {
      console.error('L·ªói khi t√¨m chi ti·∫øt s·∫£n ph·∫©m:', error);
    }
  };

  useEffect(() => {
    if (!productDetail && productId) {
      fetchProductDetail(productId);
    }
  }, [productId, productDetail]);

  const colors = ["ƒê·ªè", "Xanh", "V√†ng"];
  const sizes = ["S", "M", "L"];
  const shippingMethods = [
    { id: 'standard', label: 'Giao h√†ng ti√™u chu·∫©n (3-5 ng√†y)' },
    { id: 'express', label: 'Giao h√†ng nhanh (1-2 ng√†y)' },
    { id: 'same_day', label: 'Giao h√†ng trong ng√†y' },
  ];
  const paymentMethods = [
    { id: 'cod', label: 'Thanh to√°n khi nh·∫≠n h√†ng' },
    { id: 'online', label: 'Thanh to√°n tr·ª±c tuy·∫øn' },
  ];

  const renderStars = (rating) => {
    return [...Array(5)].map((_, index) => (
      <Ionicons
        key={index}
        name={index < rating ? "star" : "star-outline"}
        size={15}
        color={index < rating ? "#FF5722" : "#C0C0C0"}
      />
    ));
  };

  return (
    <ScrollView
      style={{ marginTop: 55, flex: 1, backgroundColor: "white" }}
      showsVerticalScrollIndicator={false}
    >
      <View style={{
        backgroundColor: "#f7f7f7",
        padding: 10,
        flexDirection: "row",
        alignItems: "center",
      }}>
        <Pressable
          style={{
            flexDirection: "row",
            alignItems: "center",
            marginHorizontal: 7,
            backgroundColor: "white",
            borderRadius: 20,
            height: 38,
            flex: 1,
            shadowColor: "#000",
            shadowOffset: { width: 0, height: 2 },
            shadowOpacity: 0.2,
            shadowRadius: 3,
            elevation: 3,
            paddingHorizontal: 10,
          }}
        >
          <AntDesign style={{ paddingLeft: 10 }} name="search1" size={22} color="black" />
          <TextInput placeholder="T√¨m ki·∫øm s·∫£n ph·∫©m..." style={{ flex: 1 }} />
        </Pressable>
      </View>

      <ScrollView horizontal showsHorizontalScrollIndicator={false}>
        {carouselImages && carouselImages.map((item, index) => (
          <ImageBackground
            key={index}
            style={{ width: 300, height: 300, marginTop: 25, resizeMode: "contain", borderRadius: 15, overflow: 'hidden' }}
            source={{ uri: item }}
          />
        ))}
      </ScrollView>

      <View style={{ padding: 10 }}>
        <View style={{ flexDirection: 'row', alignItems: 'center', justifyContent: 'space-between' }}>
          <Text style={{ fontSize: 20, fontWeight: 'bold', marginVertical: 5 }}>
            {route.params.title}
          </Text>
          <Pressable onPress={toggleFavorite}>
            <AntDesign name={isFavorited ? "heart" : "hearto"} size={24} color={isFavorited ? "red" : "black"} />
          </Pressable>
        </View>

        <View style={{ flexDirection: 'row', alignItems: 'center', marginTop: 6 }}>
          <Text style={{ fontSize: 16, textDecorationLine: 'line-through', color: 'gray', marginRight: 5 }}>
            {oldPrice ? `${oldPrice} $` : ''}
          </Text>
          <Text style={{ fontSize: 20, fontWeight: 'bold', color: '#FF5722' }}>
            {price} $
          </Text>
        </View>

        <View style={{ flexDirection: 'row', alignItems: 'center', marginTop: 10 }}>
          {renderStars(4)}
          <Text style={{ marginLeft: 10, fontSize: 16, fontWeight: 'bold' }}>4.0</Text>
          <Text style={{ marginLeft: 5, color: 'gray' }}>({reviews.length} ƒë√°nh gi√°)</Text>
        </View>

        <Text style={{ marginTop: 5, color: 'gray', fontSize: 14 }}>
          ƒê√£ b√°n: 500 s·∫£n ph·∫©m
        </Text>

        <Text style={{ fontSize: 16, marginVertical: 10 }}>
          M√¥ t·∫£: ƒê√¢y l√† s·∫£n ph·∫©m tuy·ªát v·ªùi v·ªõi ch·∫•t l∆∞·ª£ng h√†ng ƒë·∫ßu. ƒê∆∞·ª£c l√†m t·ª´ nguy√™n li·ªáu t·ª± nhi√™n, s·∫£n ph·∫©m n√†y mang l·∫°i s·ª± tho·∫£i m√°i v√† ti·ªán l·ª£i cho ng∆∞·ªùi s·ª≠ d·ª•ng. H√£y tr·∫£i nghi·ªám ngay ƒë·ªÉ c·∫£m nh·∫≠n s·ª± kh√°c bi·ªát!
        </Text>

        <View style={{ marginTop: 15 }}>
          <Text style={{ fontSize: 16, fontWeight: 'bold' }}>D·ªãch v·ª•:</Text>
          <Text style={{ marginTop: 5, color: 'gray' }}>‚úÖ B·∫£o h√†nh 1 nƒÉm</Text>
          <Text style={{ marginTop: 5, color: 'gray' }}>‚úÖ Giao h√†ng mi·ªÖn ph√≠</Text>
          <Text style={{ marginTop: 5, color: 'gray' }}>‚úÖ H·ªó tr·ª£ kh√°ch h√†ng 24/7</Text>
        </View>

        <View style={{ marginTop: 15 }}>
          <Text style={{ fontSize: 16, fontWeight: 'bold' }}>Ch·ªçn m√†u s·∫Øc:</Text>
          <View style={{ flexDirection: 'row', marginTop: 10 }}>
            {colors.map((color, index) => (
              <Pressable
                key={index}
                onPress={() => setSelectedOption({ ...selectedOption, color })}
                style={{
                  padding: 10,
                  borderWidth: selectedOption.color === color ? 2 : 1,
                  borderColor: selectedOption.color === color ? "#FF5722" : "#ccc",
                  borderRadius: 10,
                  marginRight: 10,
                  backgroundColor: selectedOption.color === color ? "#FF5722" : "transparent",
                  elevation: selectedOption.color === color ? 2 : 0,
                }}
              >
                <Text style={{ color: selectedOption.color === color ? "#fff" : "#000" }}>{color}</Text>
              </Pressable>
            ))}
          </View>
        </View>

        <View style={{ marginTop: 15 }}>
          <Text style={{ fontSize: 16, fontWeight: 'bold' }}>Ch·ªçn k√≠ch th∆∞·ªõc:</Text>
          <View style={{ flexDirection: 'row', marginTop: 10 }}>
            {sizes.map((size, index) => (
              <Pressable
                key={index}
                onPress={() => setSelectedOption({ ...selectedOption, size })}
                style={{
                  padding: 10,
                  borderWidth: selectedOption.size === size ? 2 : 1,
                  borderColor: selectedOption.size === size ? "#FF5722" : "#ccc",
                  borderRadius: 10,
                  marginRight: 10,
                  backgroundColor: selectedOption.size === size ? "#FF5722" : "transparent",
                  elevation: selectedOption.size === size ? 2 : 0,
                }}
              >
                <Text style={{ color: selectedOption.size === size ? "#fff" : "#000" }}>{size}</Text>
              </Pressable>
            ))}
          </View>
        </View>

        <View style={{ marginTop: 20, padding: 10, backgroundColor: '#f0f0f0', borderRadius: 10 }}>
          <Text style={{ fontSize: 16, fontWeight: 'bold' }}>Khuy·∫øn m√£i:</Text>
          <Text style={{ marginTop: 5, color: 'gray' }}>üéâ Gi·∫£m gi√° 10% cho ƒë∆°n h√†ng ƒë·∫ßu ti√™n!</Text>
          <Text style={{ marginTop: 5, color: 'gray' }}>üéÅ S·ª≠ d·ª•ng m√£: WELCOME10</Text>
        </View>

        <View style={{ marginTop: 20 }}>
          <Text style={{ fontSize: 16, fontWeight: 'bold' }}>H√¨nh th·ª©c thanh to√°n:</Text>
          {paymentMethods.map(method => (
            <Pressable
              key={method.id}
              onPress={() => setPaymentMethod(method.id)}
              style={{
                padding: 10,
                backgroundColor: paymentMethod === method.id ? '#FF5722' : '#f0f0f0',
                borderRadius: 10,
                marginTop: 10,
                elevation: 2,
              }}
            >
              <Text style={{ color: paymentMethod === method.id ? 'white' : 'black' }}>{method.label}</Text>
            </Pressable>
          ))}
        </View>

        <View style={{ marginTop: 15 }}>
          <Text style={{ fontSize: 16, fontWeight: 'bold' }}>Ph∆∞∆°ng th·ª©c v·∫≠n chuy·ªÉn:</Text>
          {shippingMethods.map(method => (
            <Pressable
              key={method.id}
              onPress={() => setShippingMethod(method.id)}
              style={{
                padding: 10,
                backgroundColor: shippingMethod === method.id ? '#FF5722' : '#f0f0f0',
                borderRadius: 10,
                marginTop: 10,
                elevation: 2,
              }}
            >
              <Text style={{ color: shippingMethod === method.id ? 'white' : 'black' }}>{method.label}</Text>
            </Pressable>
          ))}
        </View>

        <View style={{ marginTop: 20 }}>
          <Text style={{ fontSize: 16, fontWeight: 'bold' }}>Ch√≠nh s√°ch ƒë·ªïi tr·∫£:</Text>
          <Text style={{ marginTop: 5, color: 'gray' }}>
            ‚úÖ ƒê·ªïi tr·∫£ trong v√≤ng 7 ng√†y k·ªÉ t·ª´ ng√†y nh·∫≠n h√†ng.
          </Text>
          <Text style={{ marginTop: 5, color: 'gray' }}>
            ‚úÖ S·∫£n ph·∫©m ph·∫£i c√≤n nguy√™n v·∫πn, ch∆∞a qua s·ª≠ d·ª•ng.
          </Text>
          <Text style={{ marginTop: 5, color: 'gray' }}>
            ‚úÖ Kh√°ch h√†ng ph·∫£i ch·ªãu chi ph√≠ v·∫≠n chuy·ªÉn cho vi·ªác ƒë·ªïi tr·∫£.
          </Text>
        </View>

        <View style={{ marginTop: 20 }}>
          <Text style={{ fontSize: 16, fontWeight: 'bold' }}>ƒê√°nh gi√° c·ªßa kh√°ch h√†ng:</Text>
          <Text style={{ marginTop: 5, color: 'gray' }}>
            T·ªïng s·ªë ƒë√°nh gi√°: {reviews.length}
          </Text>
          <View style={{ marginTop: 10 }}>
            {reviews.map(review => (
              <View key={review.id} style={{ marginBottom: 15, padding: 10, backgroundColor: '#f0f0f0', borderRadius: 10 }}>
                <Text style={{ fontWeight: 'bold' }}>{review.name}</Text>
                <View style={{ flexDirection: 'row', marginTop: 5 }}>
                  {renderStars(review.rating)}
                </View>
                <Text style={{ marginTop: 5 }}>{review.comment}</Text>
              </View>
            ))}
          </View>
        </View>
      </View>

      <View style={{ height: 1, borderColor: "#e0e0e0", borderWidth: 1, marginVertical: 10 }} />

      <Pressable
        onPress={addItemToCart}
        style={{
          backgroundColor: "#FF5722",
          padding: 15,
          borderRadius: 20,
          justifyContent: "center",
          alignItems: "center",
          marginHorizontal: 10,
          marginBottom: 10,
          elevation: 3,
        }}
      >
        <Text style={{ color: "white", fontWeight: 'bold' }}>
          {addedToCart ? 'ƒê√£ th√™m v√†o gi·ªè' : 'Th√™m v√†o gi·ªè'}
        </Text>
      </Pressable>

      <Pressable
        style={{
          backgroundColor: "#00C853",
          padding: 15,
          borderRadius: 20,
          justifyContent: "center",
          alignItems: "center",
          marginHorizontal: 10,
          marginBottom: 10,
          elevation: 3,
        }}
      >
        <Text style={{ color: "white", fontWeight: 'bold' }}>Mua Ngay</Text>
      </Pressable>
    </ScrollView>
  );
};

export default ProductDetails;
